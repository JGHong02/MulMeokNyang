service: MulMeokNyang
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  environment:
    RDS_HOST: ${.env:RDS_HOST}
    RDS_USER: ${.env:RDS_USER}
    RDS_DATABASE: ${.env:RDS_DATABASE}
    RDS_PASSWORD: ${.env:RDS_PASSWORD}
    S3_BUCKET_NAME: ${.env:S3_BUCKET_NAME}
  memorySize: 2048
  timeout: 15
  stage: prod
  region: ap-northeast-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: arn:aws:s3:::mulmeoknyang-image/*

plugins:
  - serverless-dotenv-plugin

functions:
  autoLogin:
    handler: autoLogin.autoLogin
    events:
      - http:
          path: /autoLogin
          method: post

  login:
    handler: login.login
    events:
      - http:
          path: /login
          method: post

  checkEmailAvailable:
    handler: checkEmailAvailable.checkEmailAvailable
    events:
      - http:
          path: /checkEmailAvailable
          method: get

  messageAuth:
    handler: messageAuth.messageAuth
    events:
      - http:
          path: /messageAuth
          method: post

  checkMessageAuthCode:
    handler: checkMessageAuthCode.checkMessageAuthCode
    events:
      - http:
          path: /checkMessageAuthCode
          method: get

  localSignUp:
    handler: localSignUp.localSignUp
    events:
      - http:
          path: /localSignUp
          method: post

  getFindEmail:
    handler: getFindEmail.getFindEmail
    events:
      - http:
          path: /getFindEmail
          method: get

  checkUserExists:
    handler: checkUserExists.checkUserExists
    events:
      - http:
          path: /checkUserExists
          method: get

  sendPw:
    handler: sendPw.sendPw
    events:
      - http:
          path: /sendPw
          method: get

  registUserProfile:
    handler: registUserProfile.registUserProfile
    events:
      - http:
          path: /registUserProfile
          method: post

  getManagementSpaceId:
    handler: getManagementSpaceId.getManagementSpaceId
    events:
      - http:
          path: /getManagementSpaceId
          method: get

  registCatInfo:
    handler: registCatInfo.registCatInfo
    events:
      - http:
          path: /registCatInfo
          method: post

  getCatProfileList:
    handler: getCatProfileList.getCatProfileList
    events:
      - http:
          path: /getCatProfileList
          method: get

  getCatMainInfo:
    handler: getCatMainInfo.getCatMainInfo
    events:
      - http:
          path: /getCatMainInfo
          method: get

  getCatStatistics:
    handler: getCatStatistics.getCatStatistics
    events:
      - http:
          path: /getCatStatistics
          method: get

  deleteCatInfo:
    handler: deleteCatInfo.deleteCatInfo
    events:
      - http:
          path: /deleteCatInfo
          method: delete

  logout:
    handler: logout.logout
    events:
      - http:
          path: /logout
          method: delete

  getUserProfile:
    handler: getUserProfile.getUserProfile
    events:
      - http:
          path: /getUserProfile
          method: get

  modifyUserProfile:
    handler: modifyUserProfile.modifyUserProfile
    events:
      - http:
          path: /modifyUserProfile
          method: put

  getCatProfile:
    handler: getCatProfile.getCatProfile
    events:
      - http:
          path: /getCatProfile
          method: get

  modifyCatProfile:
    handler: modifyCatProfile.modifyCatProfile
    events:
      - http:
          path: /modifyCatProfile
          method: put

  getCatFeedStuff:
    handler: getCatFeedStuff.getCatFeedStuff
    events:
      - http:
          path: /getCatFeedStuff
          method: get

  modifyCatFeedStuff:
    handler: modifyCatFeedStuff.modifyCatFeedStuff
    events:
      - http:
          path: /modifyCatFeedStuff
          method: put

  getCatHydration:
    handler: getCatHydration.getCatHydration
    events:
      - http:
          path: /getCatHydration
          method: get

  modifyCatHydration:
    handler: modifyCatHydration.modifyCatHydration
    events:
      - http:
          path: /modifyCatHydration
          method: put

  getManagerList:
    handler: getManagerList.getManagerList
    events:
      - http:
          path: /getManagerList
          method: get

  userSearch:
    handler: userSearch.userSearch
    events:
      - http:
          path: /userSearch
          method: get

  addCoManager:
    handler: addCoManager.addCoManager
    events:
      - http:
          path: /addCoManager
          method: post

  deleteCoManager:
    handler: deleteCoManager.deleteCoManager
    events:
      - http:
          path: /deleteCoManager
          method: delete
